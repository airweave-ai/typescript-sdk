/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as AirweaveSDK from "../index.js";

/**
 * Complete collection representation returned by the API.
 *
 * This schema includes all collection metadata plus computed status information
 * based on the health and state of associated source connections.
 */
export interface Collection {
    /** Human-readable display name for the collection. */
    name: string;
    /** URL-safe unique identifier used in API endpoints. This becomes non-optional once the collection is created. */
    readable_id: string;
    /** Unique system identifier for the collection. This UUID is generated automatically and used for internal references. */
    id: string;
    /** Vector dimensions used by this collection. Determines which embedding model is used: 3072 (text-embedding-3-large), 1536 (text-embedding-3-small), or 384 (MiniLM-L6-v2). */
    vector_size: number;
    /** Name of the embedding model used for this collection (e.g., 'text-embedding-3-large', 'text-embedding-3-small'). This ensures queries use the same model as the indexed data. */
    embedding_model_name: string;
    /** Timestamp when the collection was created (ISO 8601 format). */
    created_at: string;
    /** Timestamp when the collection was last modified (ISO 8601 format). */
    modified_at: string;
    /** Identifier of the organization that owns this collection. Collections are isolated per organization. */
    organization_id: string;
    /** Email address of the user who created this collection. */
    created_by_email?: string;
    /** Email address of the user who last modified this collection. */
    modified_by_email?: string;
    /** Current operational status of the collection:<br/>• **NEEDS_SOURCE**: Collection has no authenticated connections, or connections exist but haven't synced yet<br/>• **ACTIVE**: At least one connection has completed a sync or is currently syncing<br/>• **ERROR**: All connections have failed their last sync */
    status?: AirweaveSDK.CollectionStatus;
}
