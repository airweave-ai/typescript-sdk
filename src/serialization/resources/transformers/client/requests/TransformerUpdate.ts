/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as AirweaveSDK from "../../../../../api/index";
import * as core from "../../../../../core";

export const TransformerUpdate: core.serialization.Schema<
    serializers.TransformerUpdate.Raw,
    Omit<AirweaveSDK.TransformerUpdate, "creds">
> = core.serialization.object({
    name: core.serialization.string(),
    description: core.serialization.string().optional(),
    methodName: core.serialization.property("method_name", core.serialization.string()),
    moduleName: core.serialization.property("module_name", core.serialization.string()),
    inputEntityDefinitionIds: core.serialization.property(
        "input_entity_definition_ids",
        core.serialization.list(core.serialization.string()),
    ),
    outputEntityDefinitionIds: core.serialization.property(
        "output_entity_definition_ids",
        core.serialization.list(core.serialization.string()),
    ),
    configSchema: core.serialization.property(
        "config_schema",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
});

export declare namespace TransformerUpdate {
    export interface Raw {
        name: string;
        description?: string | null;
        method_name: string;
        module_name: string;
        input_entity_definition_ids: string[];
        output_entity_definition_ids: string[];
        config_schema?: Record<string, unknown> | null;
    }
}
