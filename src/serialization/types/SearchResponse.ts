/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as AirweaveSDK from "../../api/index";
import * as core from "../../core";
import { ResponseType } from "./ResponseType";
import { SearchStatus } from "./SearchStatus";

export const SearchResponse: core.serialization.ObjectSchema<
    serializers.SearchResponse.Raw,
    AirweaveSDK.SearchResponse
> = core.serialization.object({
    results: core.serialization.list(
        core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    ),
    responseType: core.serialization.property("response_type", ResponseType),
    completion: core.serialization.string().optional(),
    status: SearchStatus,
});

export declare namespace SearchResponse {
    export interface Raw {
        results: Record<string, unknown>[];
        response_type: ResponseType.Raw;
        completion?: string | null;
        status: SearchStatus.Raw;
    }
}
