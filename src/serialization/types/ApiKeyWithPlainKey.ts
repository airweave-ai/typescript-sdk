/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as AirweaveSDK from "../../api/index";
import * as core from "../../core";

export const ApiKeyWithPlainKey: core.serialization.ObjectSchema<
    serializers.ApiKeyWithPlainKey.Raw,
    AirweaveSDK.ApiKeyWithPlainKey
> = core.serialization.object({
    id: core.serialization.string(),
    keyPrefix: core.serialization.property("key_prefix", core.serialization.string()),
    organization: core.serialization.string(),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date()),
    lastUsedDate: core.serialization.property("last_used_date", core.serialization.date().optional()),
    expirationDate: core.serialization.property("expiration_date", core.serialization.date()),
    createdByEmail: core.serialization.property("created_by_email", core.serialization.string()),
    modifiedByEmail: core.serialization.property("modified_by_email", core.serialization.string()),
    plainKey: core.serialization.property("plain_key", core.serialization.string()),
});

export declare namespace ApiKeyWithPlainKey {
    export interface Raw {
        id: string;
        key_prefix: string;
        organization: string;
        created_at: string;
        modified_at: string;
        last_used_date?: string | null;
        expiration_date: string;
        created_by_email: string;
        modified_by_email: string;
        plain_key: string;
    }
}
