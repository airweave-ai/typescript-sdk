/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as AirweaveSDK from "../../api/index";
import * as core from "../../core";
import { SyncStatus } from "./SyncStatus";
import { Connection } from "./Connection";

export const SyncWithSourceConnection: core.serialization.ObjectSchema<
    serializers.SyncWithSourceConnection.Raw,
    AirweaveSDK.SyncWithSourceConnection
> = core.serialization.object({
    name: core.serialization.string(),
    sourceConnectionId: core.serialization.property("source_connection_id", core.serialization.string()),
    embeddingModelConnectionId: core.serialization.property(
        "embedding_model_connection_id",
        core.serialization.string().optional(),
    ),
    destinationConnectionIds: core.serialization.property(
        "destination_connection_ids",
        core.serialization.list(core.serialization.string()),
    ),
    description: core.serialization.string().optional(),
    cronSchedule: core.serialization.property("cron_schedule", core.serialization.string().optional()),
    nextScheduledRun: core.serialization.property("next_scheduled_run", core.serialization.date().optional()),
    whiteLabelId: core.serialization.property("white_label_id", core.serialization.string().optional()),
    whiteLabelUserIdentifier: core.serialization.property(
        "white_label_user_identifier",
        core.serialization.string().optional(),
    ),
    syncMetadata: core.serialization.property(
        "sync_metadata",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    ),
    status: SyncStatus,
    id: core.serialization.string(),
    organizationId: core.serialization.property("organization_id", core.serialization.string()),
    createdAt: core.serialization.property("created_at", core.serialization.date()),
    modifiedAt: core.serialization.property("modified_at", core.serialization.date()),
    createdByEmail: core.serialization.property("created_by_email", core.serialization.string()),
    modifiedByEmail: core.serialization.property("modified_by_email", core.serialization.string()),
    sourceConnection: core.serialization.property("source_connection", Connection.optional()),
});

export declare namespace SyncWithSourceConnection {
    export interface Raw {
        name: string;
        source_connection_id: string;
        embedding_model_connection_id?: string | null;
        destination_connection_ids: string[];
        description?: string | null;
        cron_schedule?: string | null;
        next_scheduled_run?: string | null;
        white_label_id?: string | null;
        white_label_user_identifier?: string | null;
        sync_metadata?: Record<string, unknown> | null;
        status: SyncStatus.Raw;
        id: string;
        organization_id: string;
        created_at: string;
        modified_at: string;
        created_by_email: string;
        modified_by_email: string;
        source_connection?: Connection.Raw | null;
    }
}
