/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as AirweaveSDK from "../../api/index";
import * as core from "../../core";
import { CollectionStatus } from "./CollectionStatus";

export const Collection: core.serialization.ObjectSchema<serializers.Collection.Raw, AirweaveSDK.Collection> =
    core.serialization.object({
        name: core.serialization.string(),
        readableId: core.serialization.property("readable_id", core.serialization.string()),
        id: core.serialization.string(),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date()),
        organizationId: core.serialization.property("organization_id", core.serialization.string()),
        createdByEmail: core.serialization.property("created_by_email", core.serialization.string()),
        modifiedByEmail: core.serialization.property("modified_by_email", core.serialization.string()),
        status: CollectionStatus.optional(),
    });

export declare namespace Collection {
    export interface Raw {
        name: string;
        readable_id: string;
        id: string;
        created_at: string;
        modified_at: string;
        organization_id: string;
        created_by_email: string;
        modified_by_email: string;
        status?: CollectionStatus.Raw | null;
    }
}
