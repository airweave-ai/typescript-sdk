/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as AirweaveSDK from "../../api/index";
import * as core from "../../core";

export const ChatMessage: core.serialization.ObjectSchema<serializers.ChatMessage.Raw, AirweaveSDK.ChatMessage> =
    core.serialization.object({
        content: core.serialization.string(),
        role: core.serialization.string().optional(),
        id: core.serialization.string(),
        chatId: core.serialization.property("chat_id", core.serialization.string()),
        tokensUsed: core.serialization.property("tokens_used", core.serialization.number().optional()),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
        modifiedAt: core.serialization.property("modified_at", core.serialization.date()),
        createdByEmail: core.serialization.property("created_by_email", core.serialization.string()),
        modifiedByEmail: core.serialization.property("modified_by_email", core.serialization.string()),
        organizationId: core.serialization.property("organization_id", core.serialization.string()),
    });

export declare namespace ChatMessage {
    export interface Raw {
        content: string;
        role?: string | null;
        id: string;
        chat_id: string;
        tokens_used?: number | null;
        created_at: string;
        modified_at: string;
        created_by_email: string;
        modified_by_email: string;
        organization_id: string;
    }
}
